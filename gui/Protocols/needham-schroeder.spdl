# Needham Schroeder Public Key
#
# Modelled after the description in the SPORE library
# http://www.lsv.ens-cachan.fr/spore/nspk.html
#
#
# Note:
# The modelling in SPORE includes a server to distribute the public keys
# of the agents, this is not necessary and it allows for attacks against
# synchronisation and agreement, because the keys that the server sends
# out can be replayed.

protocol needhamschroederpk(I,R,S)
{
    role I
    {
        fresh Ni: Nonce;
        var Nr: Nonce;

        send_1(I,S,(I,R));
        recv_2(S,I, {pk(R), R}sk(S));
        send_3(I,R,{Ni,I}pk(R));
        recv_6(R,I, {Ni, Nr}pk(I));
        send_7(I,R, {Nr}pk(R));
        claim_I1(I,Secret,Ni);
        claim_I2(I,Secret,Nr);
        claim_I3(I,Nisynch);
    }    
    
    role R
    {
        fresh Nr: Nonce;
        var Ni: Nonce;
        
        recv_3(I,R,{Ni,I}pk(R));
        send_4(R,S,(R,I));
        recv_5(S,R,{pk(I),I}sk(S));
        send_6(R,I,{Ni,Nr}pk(I));
        recv_7(I,R,{Nr}pk(R));
        claim_R1(R,Secret,Nr);
        claim_R2(R,Secret,Ni);
        claim_R3(R,Nisynch);
    }

    role S
    {
        recv_1(I,S,(I,R));
        send_2(S,I,{pk(R),R}sk(S));
        recv_4(R,S,(R,I));
        send_5(S,R,{pk(I),I}sk(S));
    }
}

