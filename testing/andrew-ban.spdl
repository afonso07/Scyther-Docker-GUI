usertype SessionKey;
secret k: Function;

protocol andrewBan(I,R)
{
	role I
	{
		fresh ni: Nonce;
		var nr,nr2: Nonce;
		var kir: SessionKey;

		send_1(I,R, I,{ni}k(I,R) );
		recv_2(R,I, {ni,nr}k(I,R) );
		send_3(I,R, {nr}k(I,R) );
		recv_4(R,I, {kir,nr2,ni}k(I,R) );
		claim_5(I,Nisynch);
		claim_5b(I,Niagree);
		claim_6(I,Secret, kir);
		claim_7(I,Secret, k(I,R));
	}	
	
	role R
	{
		var ni: Nonce;
		fresh nr,nr2: Nonce;
		fresh kir: SessionKey;

		recv_1(I,R, I,{ni}k(I,R) );
		send_2(R,I, {ni,nr}k(I,R) );
		recv_3(I,R, {nr}k(I,R) );
		send_4(R,I, {kir,nr2,ni}k(I,R) );
		claim_8(R,Nisynch);
		claim_8b(R,Niagree);
		claim_9(R,Secret, kir);
		claim_10(R,Secret, k(I,R));
	}
}


const kee: SessionKey;

